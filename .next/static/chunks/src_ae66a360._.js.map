{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/nova/Documents/Mine/Project/GiggleGear/src/stores/cartStore.ts"],"sourcesContent":["import { CartStoreActionsType, CartStoreStateType } from '@/types'\nimport { create } from 'zustand'\nimport { persist, createJSONStorage } from 'zustand/middleware'\nconst useCartStore = create<CartStoreStateType & CartStoreActionsType>()(\n    persist((set) => ({\n        cart: [],\n        hasHydrated: false,\n        addToCart: (product) =>\n            set((state) => {\n              const existingIndex = state.cart.findIndex(\n                (p) =>\n                  p.id === product.id &&\n                  p.selectedSize === product.selectedSize &&\n                  p.selectedColor === product.selectedColor\n              );\n    \n              if (existingIndex !== -1) {\n                const updatedCart = [...state.cart];\n                updatedCart[existingIndex].quantity += product.quantity || 1;\n                return { cart: updatedCart };\n              }\n    \n              return {\n                cart: [\n                  ...state.cart,\n                  {\n                    ...product,\n                    quantity: product.quantity || 1,\n                    selectedSize: product.selectedSize,\n                    selectedColor: product.selectedColor,\n                  },\n                ],\n              };\n        }),\n        removeFromCart: (product) =>\n            set((state) => ({\n              cart: state.cart.filter(\n                (p) =>\n                  !(\n                    p.id === product.id &&\n                    p.selectedSize === product.selectedSize &&\n                    p.selectedColor === product.selectedColor\n                  )\n              ),\n        })),\n        clearCart: ()=> set({ cart: []})\n        }),\n        {\n            name: \"cart\", \n            storage: createJSONStorage(()=>localStorage),\n            onRehydrateStorage: () => (state) => {\n                if (state) {\n                  state.hasHydrated = true;\n                }\n            },\n        }\n    )\n);\n\nexport default useCartStore;"],"names":[],"mappings":";;;AACA;AACA;;;AACA,MAAM,eAAe,CAAA,GAAA,2IAAA,CAAA,SAAM,AAAD,IACtB,CAAA,GAAA,gJAAA,CAAA,UAAO,AAAD,EAAE,CAAC,MAAQ,CAAC;QACd,MAAM,EAAE;QACR,aAAa;QACb,WAAW,CAAC,UACR,IAAI,CAAC;gBACH,MAAM,gBAAgB,MAAM,IAAI,CAAC,SAAS,CACxC,CAAC,IACC,EAAE,EAAE,KAAK,QAAQ,EAAE,IACnB,EAAE,YAAY,KAAK,QAAQ,YAAY,IACvC,EAAE,aAAa,KAAK,QAAQ,aAAa;gBAG7C,IAAI,kBAAkB,CAAC,GAAG;oBACxB,MAAM,cAAc;2BAAI,MAAM,IAAI;qBAAC;oBACnC,WAAW,CAAC,cAAc,CAAC,QAAQ,IAAI,QAAQ,QAAQ,IAAI;oBAC3D,OAAO;wBAAE,MAAM;oBAAY;gBAC7B;gBAEA,OAAO;oBACL,MAAM;2BACD,MAAM,IAAI;wBACb;4BACE,GAAG,OAAO;4BACV,UAAU,QAAQ,QAAQ,IAAI;4BAC9B,cAAc,QAAQ,YAAY;4BAClC,eAAe,QAAQ,aAAa;wBACtC;qBACD;gBACH;YACN;QACA,gBAAgB,CAAC,UACb,IAAI,CAAC,QAAU,CAAC;oBACd,MAAM,MAAM,IAAI,CAAC,MAAM,CACrB,CAAC,IACC,CAAC,CACC,EAAE,EAAE,KAAK,QAAQ,EAAE,IACnB,EAAE,YAAY,KAAK,QAAQ,YAAY,IACvC,EAAE,aAAa,KAAK,QAAQ,aAAa,AAC3C;gBAEV,CAAC;QACD,WAAW,IAAK,IAAI;gBAAE,MAAM,EAAE;YAAA;IAC9B,CAAC,GACD;IACI,MAAM;IACN,SAAS,CAAA,GAAA,gJAAA,CAAA,oBAAiB,AAAD,EAAE,IAAI;IAC/B,oBAAoB,IAAM,CAAC;YACvB,IAAI,OAAO;gBACT,MAAM,WAAW,GAAG;YACtB;QACJ;AACJ;uCAIO","debugId":null}},
    {"offset": {"line": 65, "column": 0}, "map": {"version":3,"sources":["file:///Users/nova/Documents/Mine/Project/GiggleGear/src/components/ShoppingCartIcon.tsx"],"sourcesContent":["\"use client\"\n\nimport useCartStore from \"@/stores/cartStore\"\nimport { ShoppingCart } from \"lucide-react\"\nimport Link from \"next/link\"\n\nconst ShoppingCartIcon = () => {\n  const {cart, hasHydrated} = useCartStore()\n  if (!hasHydrated) return null;\n  return (\n    <Link href=\"/cart\" className=\"relative\">\n         <ShoppingCart className=\"w-6 h-6 hover:text-pink-400\" />\n         <span className=\"absolute text-white -right-3 -top-3 flex size-5 items-center justify-center rounded-full bg-[#EB003B]\">\n            {/* {cart.reduce((acc,item) => acc + item.quantity, 0)} */}2\n        </span>\n    </Link>\n  )\n}\n\nexport default ShoppingCartIcon"],"names":[],"mappings":";;;;AAEA;AACA;AACA;;;AAJA;;;;AAMA,MAAM,mBAAmB;;IACvB,MAAM,EAAC,IAAI,EAAE,WAAW,EAAC,GAAG,CAAA,GAAA,6HAAA,CAAA,UAAY,AAAD;IACvC,IAAI,CAAC,aAAa,OAAO;IACzB,qBACE,6LAAC,+JAAA,CAAA,UAAI;QAAC,MAAK;QAAQ,WAAU;;0BACxB,6LAAC,yNAAA,CAAA,eAAY;gBAAC,WAAU;;;;;;0BACxB,6LAAC;gBAAK,WAAU;0BAC8C;;;;;;;;;;;;AAIvE;GAXM;;QACwB,6HAAA,CAAA,UAAY;;;KADpC;uCAaS","debugId":null}}]
}